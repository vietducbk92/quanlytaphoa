/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vdbk.apps.quanlybanhang.ui;

import com.vdbk.apps.quanlybanhang.database.Item;
import java.awt.Font;
import java.awt.Point;
import java.awt.Rectangle;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DucNV23
 */
public class DepotTable_tmp extends javax.swing.JPanel {

    private int itemCount = 0;
    private ArrayList<Item> items = new ArrayList<Item>();
    private ItemSelectionListener listener;

    void update(String barcode, Item newItem) {
        for (int i = 0; i < items.size(); i++) {
            if (items.get(i).getId().equals(barcode)) {
                jTable1.setValueAt(newItem.getName(), i, 1);
                jTable1.setValueAt(newItem.getWholeScalePrice(), i, 2);
                jTable1.setValueAt(newItem.getRetailPrice(), i, 3);
                jTable1.setValueAt(newItem.getUnit(), i, 4);
                jTable1.setValueAt(newItem.getNote(), i, 5);
                items.remove(i);
                items.add(i, newItem);
                scrollToIndex(i);
                break;
            }
        }
    }

    public void scrollToItem(String barcode) {
        for (int i = 0; i < items.size(); i++) {
            if (items.get(i).getId().equals(barcode)) {
                scrollToIndex(i);
                break;
            }
        }
    }

    public void delete(String barcode) {
        for (int i = 0; i < items.size(); i++) {
            if (items.get(i).getId().equals(barcode)) {
                ((DefaultTableModel) jTable1.getModel()).removeRow(i);
                items.remove(i);
                break;
            }
        }
    }

    public interface ItemSelectionListener {

        public void onItemSelected(Item item);//mouse clicked

        public void onItemEntered(Item item);// mouse double clicked
    }

    /**
     * Creates new form Table
     */
    public DepotTable_tmp() {
        initComponents();
        jTable1.getColumnModel().getColumn(0).setMaxWidth(75);//stt
        jTable1.getColumnModel().getColumn(0).setMinWidth(75);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(300);//ten hang
        jTable1.getColumnModel().getColumn(1).setMinWidth(300);
        jTable1.getColumnModel().getColumn(2).setMaxWidth(150);//gia si
        jTable1.getColumnModel().getColumn(2).setMinWidth(150);
        jTable1.getColumnModel().getColumn(3).setMaxWidth(150);//gia le
        jTable1.getColumnModel().getColumn(3).setMinWidth(150);
        jTable1.getColumnModel().getColumn(4).setMaxWidth(100);//don vi
        jTable1.getColumnModel().getColumn(4).setMinWidth(100);
        jTable1.getColumnModel().getColumn(6).setMaxWidth(50);//delete
        jTable1.getColumnModel().getColumn(6).setMinWidth(50);
        jTable1.getTableHeader().setFont(Constants.FONT_CONTENT);
        jTable1.setFont(Constants.FONT_CONTENT);
        jTable1.setShowGrid(true);
    }

    public void addItemSelectionListener(ItemSelectionListener listener) {
        this.listener = listener;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setFont(Constants.FONT_CONTENT);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "TÊN HÀNG", "GIÁ BÁN SỈ", "GIÁ BÁN LẺ", "ĐƠN VỊ", "GHI CHÚ", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class

                , java.lang.String.class

                , java.lang.Double.class

                , java.lang.Double.class

                , java.lang.String.class

                , java.lang.String.class

                , java.lang.Object.class

            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable1.setGridColor(new java.awt.Color(0, 0, 0));
        jTable1.setRowHeight(60);
        jTable1.setRowMargin(10);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTable1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1KeyTyped

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1KeyPressed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        // TODO add your handling code here:
        if (listener == null) {
            return;
        }
        JTable table = (JTable) evt.getSource();
        Point point = evt.getPoint();
        int row = table.rowAtPoint(point);
        if (table.getSelectedRow() < 0) {
            return;
        }
        Item item = items.get(table.getSelectedRow());

        if (evt.getClickCount() == 2) {
            listener.onItemEntered(item);
        } else {
            listener.onItemSelected(item);
        }
    }//GEN-LAST:event_jTable1MousePressed

    public void addNewItem(Item item) {
        if (item == null) {
            return;
        }
        itemCount++;
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.addRow(new Object[]{itemCount, item.getName(), item.getWholeScalePrice(), item.getRetailPrice(), item.getUnit(), item.getNote()});
        items.add(item);
    }

    private void scrollToIndex(int index) {
        jTable1.setRowSelectionInterval(index, index);
        jTable1.scrollRectToVisible(new Rectangle(jTable1.getCellRect(index, 0, true)));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
